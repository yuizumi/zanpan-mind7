※ -*- coding: euc-jp -*-

実数は　変数と　等価。

実数分解するとは
　　引数は　変数
　　引数に　入れ
　　引数が　負？　ならば　−１　さもなければ　＋１　つぎに
　　引数と　７Ｆ８０００００Ｈの　ＡＮＤをとり　２３ビット　右シフトしたものと
　　引数と　００７ＦＦＦＦＦＨの　ＡＮＤをとったものを　返す。

実数合成するとは
　　※　仮数、指数、符号
　　００７ＦＦＦＦＦＨとの　ＡＮＤをとり
　　交換して
　　※　指数、仮数、符号
　　００ＦＦＨとの　ＡＮＤをとり
　　２３ビット　左シフトしたものとの　ＯＲをとり
　　※　指数＋仮数、符号
　　交換して
　　※　符号、指数＋仮数
　　負？　ならば　８０００００００Ｈとの　ＯＲをとる
　　※　符号＋指数＋仮数
　　つぎに。

仮数分解するとは
　　引数は　変数
　　００８０００００Ｈを　足して　引数に　入れ
　　引数を　１２ビット　右シフトして　０ＦＦＦＨとの　ＡＮＤをとったものと
　　引数を　０ＦＦＦＨとの　ＡＮＤをとったものを　返す。

※　TODO(yuizumi): オーバーフローへの対策
実数として掛けるとは
　　符号Ａは　変数　指数Ａは　変数　仮数Ａ上は　変数　仮数Ａ下は　変数
　　符号Ｂは　変数　指数Ｂは　変数　仮数Ｂ上は　変数　仮数Ｂ下は　変数
　　指数は　変数　仮数は　変数

　　実数分解して　仮数分解して
　　符号Ｂと　指数Ｂと　仮数Ｂ上と　仮数Ｂ下に　入れ
　　実数分解して　仮数分解して
　　符号Ａと　指数Ａと　仮数Ａ上と　仮数Ａ下に　入れ
　　※　もとの嵩上げ＝１２７、計算上の嵩上げ＝４、調整分＝−１
　　指数Ａと　指数Ｂを　加えて　１３０を　引いたものを
　　指数に　入れる
　　仮数Ａ下と　仮数Ｂ下を　掛けて　４ビット　左シフトして
　　１２ビット　右シフトして
　　仮数Ａ下と　仮数Ｂ上を　掛けて　４ビット　左シフトして　加えて　
　　仮数Ａ上と　仮数Ｂ下を　掛けて　４ビット　左シフトして　加えて
　　１２ビット　右シフトして
　　仮数Ａ上と　仮数Ｂ上を　掛けて　４ビット　左シフトして　加えて
　　仮数に　入れる
　　ここから
　　　　仮数が　０１００００００Ｈより　小さい
        　　ならば　打ち切り
　　　　つぎに
　　　　指数を　一つ増加させ
　　　　仮数を　１ビット　右シフトして　仮数に　入れ
　　繰り返し
　　符号Ａと　符号Ｂを　掛けたものと　指数と　仮数で　実数合成する。
　　

実数表示するとは
　　実数分解して
　　数値表示して　「:」を　表示して
　　数値表示して　「:」を　表示して
　　数値表示する。
　　

メインとは
　　1075838976と　1067450368を　実数として掛けて
　　実数表示して　改行する
　　1069547520と　1069547520を　実数として掛けて
　　実数表示して　改行する。